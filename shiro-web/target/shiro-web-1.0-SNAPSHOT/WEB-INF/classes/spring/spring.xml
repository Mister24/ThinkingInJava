<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="login.html"/>
        <property name="unauthorizedUrl" value="403.html"/>
        <!-- 在filterChainDefinitions这个bean中可以根据访问路径在配置不同的过滤器
            anno，任何人都可以访问；
            authc：必须是登录之后才能进行访问，不包括remember me；
            user：登录用户才可以访问，包含remember me；
            perms：指定过滤规则，这个一般是扩展使用，不会使用原生的；
            -->
        <property name="filterChainDefinitions">
            <!-- 拦截器的优先级：从上到下，从左到右，如果有匹配的拦截器就会阻断并返回 -->
            <value>
                /login.html = anon
                /subLogin = anon
                /* = authc
            </value>
        </property>
    </bean>

    <!-- 创建SecurityManager对象 -->
    <bean id="securityManager"
          class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="realm"/>
    </bean>

    <bean id="realm" class="com.fayuan.shiro.realm.CustomRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="1"/>
    </bean>
</beans>