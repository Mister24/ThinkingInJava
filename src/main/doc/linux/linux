Linux:

1. 常用命令：用户控制、权限控制、进程控制、系统状态查询之类的

2. Linux状态分析：CPU（top）、内存（top和free，注意buffer和cache区别）、磁盘（fdisk和df）、IO（iostat）等

3. grep和sed

4. awk（用好awk，脚本写得好）

5. shell脚本

6. Linux目录结构（尤其是/proc非常重要）

7. linux文件系统结构和启动流程

8. 防火墙iptables（这个比较少）


子进程继承父进程
    1.用户号UIDs和用户组号GIDs
    2.环境Environment
    3.堆栈
    4.共享内存
    5.打开文件的描述符
    6.执行时关闭（Close-on-exec）标志
    7.信号（Signal）控制设定
    8.进程组号
    8.当前工作目录
    9.根目录
    10.文件方式创建屏蔽字
    11.资源限制
    12.控制终端

子进程独有
    1.进程号PID
    2.不同的父进程号
    3.自己的文件描述符和目录流的拷贝
    4.子进程不继承父进程的进程正文（text），数据和其他锁定内存（memory locks）
    5.不继承异步输入和输出

    父进程和子进程拥有独立的地址空间和PID参数。

    子进程从父进程继承了用户号和用户组号，用户信息，目录信息，环境（表），打开的文件描述符，堆栈，（共享）内存等。

    经过fork()以后，父进程和子进程拥有相同内容的代码段、数据段和用户堆栈，就像父进程把自己克隆了一遍。
    事实上，父进程只复制了自己的PCB块。而代码段，数据段和用户堆栈内存空间并没有复制一份，而是与子进程共享。
    只有当子进程在运行中出现写操作时，才会产生中断，并为子进程分配内存空间。由于父进程的PCB和子进程的一样，
    所以在PCB中断中所记录的父进程占有的资源，也是与子进程共享使用的。这里的“共享”一词意味着“竞争”   